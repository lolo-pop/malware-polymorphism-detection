#-*- coding : UTF-8 -*-
#

import os
import shutil
import numpy as np
import time
import csv
from numpy import *
import time

def LoadData1(name):
    #print("start  reading file with target")
    try:
        file=open(name , "r")#r
        listData=[]
        while True:
            line=file.readline().replace("\n","")
            if not line: break
            splits=line.split(",")
            listData.append(splits)
    finally:
        file.close()
        return listData

def funcSimCount(csvDir, csvWeight):
	listFuncSimilarity = LoadData1(csvDir)
	listFuncSimilarityInfo = listFuncSimilarity[1:len(listFuncSimilarity)]
	#print len(listFuncSimilarityInfo)
	flag = False
	for i in xrange(0, len(listFuncSimilarityInfo)-1, 4) :
		mark = True
		for t in range(0, 4) :
			print listFuncSimilarityInfo[i+t][17]
			if float(listFuncSimilarityInfo[i+t][17]) < 0.8 :
				mark = False
				break
		if mark :
			flag = True
			print i
			break
	return flag
def simCalc():
	resultsDir = "E:\\design\\test\\results"
	listSrcSimplesName = os.listdir(resultsDir)
	simResultBase = "E:\\design\\test\\similarityResult"
	for srcSimplesName in listSrcSimplesName:
		simResultName = srcSimplesName+".csv"
		simResultDir = os.path.join(simResultBase, simResultName)
		f = open(simResultDir, 'wb')
		w = csv.writer(f)
		listHeader = ['sourceSimpleName','targetFamilyName','similarity']
		w.writerow(listHeader)
		listToWrite = []
		listToWrite.append(srcSimplesName)
		srcSimplesDir = os.path.join(resultsDir, srcSimplesName)
		listTargetFamilyName = os.listdir(srcSimplesDir)
		for targetFamilyName in listTargetFamilyName:
			listToWrite.append(targetFamilyName)
			targetFamilyDir = os.path.join(srcSimplesDir, targetFamilyName)
			listCsvName = os.listdir(targetFamilyDir)
			countSim = 0.0
			for csvName in listCsvName:
				csvDir = os.path.join(targetFamilyDir, csvName)
				csvWeight = float(csvName.split("-")[-2])
				print csvName
				if funcSimCount(csvDir, csvWeight):
					countSim = countSim+csvWeight
			listToWrite.append(str(countSim))
			w.writerow(listToWrite)
		f.close()
if __name__ == '__main__' :
	simCalc()